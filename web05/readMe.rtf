{\rtf1\ansi\ansicpg949\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
//
\f1 \'b8\'f1\'b7\'cf\'ba\'b8\'b1\'e2
\f0 \
	public PageDTO list(Connection con,String searchName, String searchValue, int curPage)\{\
		PageDTO pageDTO = new PageDTO();\
		\
\
		////////////////////////////////////////////////////////\
		List<BoardDTO> list = new ArrayList<BoardDTO>();\
		PreparedStatement pstmt = null;\
		ResultSet rs = null;\
		try \{\
			StringBuffer buffer = new StringBuffer();\
			buffer.append("SELECT num, title, author, content, to_char(writeday, 'YYYY/MM/dd') as writeday , readcnt");\
			buffer.append(" FROM");\
			buffer.append(" (");\
			buffer.append(" SELECT SEQ, num, title, author, content, writeday, readcnt");\
			buffer.append(" FROM");\
			buffer.append(" (");\
			buffer.append(" SELECT ROWNUM AS SEQ, num, title, author, content, writeday, readcnt");\
			buffer.append(" FROM");\
			buffer.append(" (");\
			buffer.append(" SELECT num, title, author, content, writeday , readcnt");\
			buffer.append(" FROM board");\
			\
			if("title".equals(searchName) && searchValue != null) \{\
				buffer.append(" where title LIKE ?");\
				buffer.append(" ORDER BY num DESC");\
				buffer.append(" )");\
				buffer.append(" )");\
				buffer.append(" WHERE SEQ >= 2");\
				buffer.append(" )");\
				buffer.append(" WHERE ROWNUM <= 3");\
				pstmt = con.prepareStatement(buffer.toString());\
				pstmt.setString(1, "%"+searchValue+"%");\
\
			\}else if("author".equals(searchName) && searchValue != null)\{\
				buffer.append(" where author LIKE ?");\
				buffer.append(" ORDER BY num DESC");\
				buffer.append(" )");\
				buffer.append(" )");\
				buffer.append(" WHERE SEQ >= 2");\
				buffer.append(" )");\
				buffer.append(" WHERE ROWNUM <= 3");\
				pstmt = con.prepareStatement(buffer.toString());\
				pstmt.setString(1, "%"+searchValue+"%");\
\
			\}else \{\
				buffer.append(" ORDER BY num DESC");\
				buffer.append(" )");\
				buffer.append(" )");\
				buffer.append(" WHERE SEQ >= 1");\
				buffer.append(" )");\
				buffer.append(" WHERE ROWNUM <= 3");\
				pstmt = con.prepareStatement(buffer.toString());\
			\}\
			System.out.println("#################################");\
			System.out.println(buffer.toString());\
			System.out.println("#################################");\
			rs = pstmt.executeQuery();\
			while(rs.next()) \{\
				int num = rs.getInt("num");\
			    String title = rs.getString("title");\
				String author = rs.getString("author");\
				String writeday = rs.getString("writeday");\
				int readcnt = rs.getInt("readcnt");\
				// 
\f1 \'b3\'aa\'c1\'df\'bf\'a1
\f0  Builder 
\f1 \'c6\'d0\'c5\'cf
\f0 \
				BoardDTO dto = new BoardDTO();\
				dto.setNum(num);\
				dto.setTitle(title);\
				dto.setAuthor(author);\
				dto.setWriteday(writeday);\
				dto.setReadcnt(readcnt);\
				list.add(dto);\
			\}\
		\}catch(SQLException e) \{\
			e.printStackTrace();\
		\}finally \{\
			try \{\
				if(rs!=null)rs.close();\
				if(pstmt!=null)pstmt.close();\
			\} catch (SQLException e) \{\
				e.printStackTrace();\
			\}	\
		\}\
		////////////////////////////////////////////////////////\
		pageDTO.setList(list);\
		\
		return pageDTO;\
		\
	\}//end list\
\
#################################\
PreparedStatement pstmt = null;\
		ResultSet rs = null;\
		try \{\
			String sql="select num, title, author, content, to_char(writeday, 'YYYY/MM/dd') as writeday, "\
					+ " readcnt from board ";\
			\
			if("title".equals(searchName) && searchValue != null) \{\
				sql += " where title LIKE ?";\
				pstmt = con.prepareStatement(sql);\
				pstmt.setString(1, "%"+searchValue+"%");\
\
			\}else if("author".equals(searchName) && searchValue != null)\{\
				sql += " where author LIKE ?";\
				pstmt = con.prepareStatement(sql);\
				pstmt.setString(1, "%"+searchValue+"%");\
\
			\}else \{\
				pstmt = con.prepareStatement(sql);\
			\}\
			\
			rs = pstmt.executeQuery();\
			while(rs.next()) \{\
				int num = rs.getInt("num");\
			    String title = rs.getString("title");\
				String author = rs.getString("author");\
				String writeday = rs.getString("writeday");\
				int readcnt = rs.getInt("readcnt");\
				// 
\f1 \'b3\'aa\'c1\'df\'bf\'a1
\f0  Builder 
\f1 \'c6\'d0\'c5\'cf
\f0 \
				BoardDTO dto = new BoardDTO();\
				dto.setNum(num);\
				dto.setTitle(title);\
				dto.setAuthor(author);\
				dto.setWriteday(writeday);\
				dto.setReadcnt(readcnt);\
				list.add(dto);\
			\}\
		\}catch(SQLException e) \{\
			e.printStackTrace();\
		\}finally \{\
			try \{\
				if(rs!=null)rs.close();\
				if(pstmt!=null)pstmt.close();\
			\} catch (SQLException e) \{\
				e.printStackTrace();\
			\}	\
		\}\
\
\
\
#############################################################################\
\
package com.dto;\
\
public class DeptDTO \{\
\
	private int deptno;\
	private String dname;\
	private String loc;\
	\
	public DeptDTO() \{\
		System.out.println("DeptDTO");\
	\}\
	public DeptDTO(int deptno, String dname, String loc) \{\
		this.deptno = deptno;\
		this.dname = dname;\
		this.loc = loc;\
	\}\
	public int getDeptno() \{\
		System.out.println("getDeptno");\
		return deptno;\
	\}\
	public void setDeptno(int deptno) \{\
		System.out.println("setDeptno");\
		this.deptno = deptno;\
	\}\
\
	public String getDname() \{\
		System.out.println("getDname");\
		return dname;\
	\}\
\
	public void setDname(String dname) \{\
		System.out.println("setDname");\
		this.dname = dname;\
	\}\
\
	public String getLoc() \{\
		System.out.println("getLoc");\
		return loc;\
	\}\
\
	public void setLoc(String loc) \{\
		System.out.println("setLoc");\
		this.loc = loc;\
	\}\
\
	@Override\
	public String toString() \{\
		return "DeptDTO [deptno=" + deptno + ", dname=" + dname + ", loc=" + loc + "]";\
	\}\
\
\}\
\
\
\
\
\
}